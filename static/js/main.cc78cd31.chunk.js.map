{"version":3,"sources":["App.js","index.js"],"names":["App","useState","calc","setCalc","result","setResult","ops","updateCalc","value","includes","slice","eval","toString","createDigits","digits","i","push","onClick","calculate","deletelast","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ssBAEA,SAASA,MACP,cAAwBC,oDAAS,IAAjC,+MAAOC,KAAP,cAAaC,QAAb,cACA,WAA4BF,oDAAS,IAArC,gNAAOG,OAAP,cAAeC,UAAf,cAEMC,IAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAE3BC,WAAa,SAAbA,WAAaC,OAEfF,IAAIG,SAASD,QAAmB,KAATN,MACvBI,IAAIG,SAASD,QAAUF,IAAIG,SAASP,KAAKQ,OAAO,MAKlDP,QAAQD,KAAOM,OAEXF,IAAIG,SAASD,QACfH,UAAUM,KAAKT,KAAOM,OAAOI,cAIzBC,aAAe,WAGnB,IAFA,IAAMC,EAAS,GADS,WAGhBC,GACND,EAAOE,KACL,qEACCC,QAAS,kBAAMV,WAAWQ,EAAEH,aAD7B,SAGEG,GADMA,KAJJA,EAAI,EAAGA,EAAI,GAAIA,IAAK,EAApBA,GASR,OAAOD,GAGHI,UAAY,SAAZA,YACJf,QAAQQ,KAAKT,MAAMU,aAGfO,WAAa,WACjB,GAAY,IAARjB,KAAJ,CAGA,IAAMM,EAAQN,KAAKQ,MAAM,GAAG,GAC5BP,QAAQK,KAGZ,OACE,kEAAKY,UAAU,MAAf,SACE,mEAAKA,UAAU,aAAf,UACE,mEAAKA,UAAU,UAAf,UACGhB,OAAS,kFAAQA,OAAR,OAA0B,GAGnCF,MAAQ,OAGX,mEAAKkB,UAAU,YAAf,UACE,qEAAQH,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eAEA,qEAAQU,QAASE,WAAjB,oBAEF,mEAAKC,UAAU,SAAf,UACEP,eACA,qEAAQI,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAASC,UAAjB,uBAOKlB,2B,+BC/Ef,iEAKAqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cc78cd31.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction App() {\n  const [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  const ops = ['/', '*', '+', '-', '.'];\n\n  const updateCalc = value => {\n    if (\n      ops.includes(value) && calc === '' ||\n      ops.includes(value) && ops.includes(calc.slice(-1)\n      )\n    ) {\n      return;\n    }\n    setCalc(calc + value);\n\n    if(!ops.includes(value)){\n      setResult(eval(calc + value).toString());\n    }\n  }\n\n    const createDigits = () =>{\n      const digits = [];\n\n      for(let i = 1; i < 10; i++){\n        digits.push(\n          <button\n           onClick={() => updateCalc(i.toString())}\n           key = {i}>\n           {i}\n           </button>\n        )\n      }\n      return digits;\n    }\n\n    const calculate = () =>{\n      setCalc(eval(calc).toString());\n    }\n\n    const deletelast = () => {\n      if (calc == '') {\n        return;\n      }\n      const value = calc.slice(0,-1);\n      setCalc(value);\n    }\n\n  return (\n    <div className=\"App\">\n      <div className=\"calculator\">\n        <div className=\"display\">\n          {result ? <span>({result})</span> : ''}\n        \n\n          {calc || \"0\"}\n        </div>\n\n        <div className=\"operators\">\n          <button onClick={() => updateCalc('/')}>/</button>\n          <button onClick={() => updateCalc('*')}>*</button>\n          <button onClick={() => updateCalc('+')}>+</button>\n          <button onClick={() => updateCalc('-')}>-</button>\n\n          <button onClick={deletelast}>DEL</button>\n        </div>\n        <div className=\"digits\">\n        { createDigits() }\n          <button onClick={() => updateCalc('0')}>0</button>\n          <button onClick={() => updateCalc('.')}>.</button>\n          <button onClick={calculate}>=</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}